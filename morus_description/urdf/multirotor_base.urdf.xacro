<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Helper property to create link names with tf_prefix -->
  <xacro:property name="link_prefix" value="${tf_prefix}" />
  
  <!-- Main multirotor link -->
  <xacro:macro name="multirotor_base_macro"
    params="robot_namespace mass body_width body_height mesh_file mesh_file_mass scale_factor base_link_name tf_prefix *inertia">
    
    <!-- Create link names with tf_prefix -->
    <xacro:if value="${tf_prefix != ''}">
      <xacro:property name="prefixed_base_link" value="${tf_prefix}/${base_link_name}" />
      <xacro:property name="prefixed_base_link_inertia" value="${tf_prefix}/${base_link_name}_inertia" />
      <xacro:property name="prefixed_imu_link" value="${tf_prefix}/imu_link" />
    </xacro:if>
    <xacro:unless value="${tf_prefix != ''}">
      <xacro:property name="prefixed_base_link" value="${base_link_name}" />
      <xacro:property name="prefixed_base_link_inertia" value="${base_link_name}_inertia" />
      <xacro:property name="prefixed_imu_link" value="imu_link" />
    </xacro:unless>
    
    <link name="${prefixed_base_link}"></link>
    <joint name="base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="${prefixed_base_link}" />
      <child link="${prefixed_base_link_inertia}" />
    </joint>
    <link name="${prefixed_base_link_inertia}">
      <inertial>
        <mass value="${mass}" />  <!-- [kg] -->
        <origin xyz="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>

      <visual>
        <origin xyz="0 0 ${-0.65 * scale_factor}" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://morus_description/meshes/${mesh_file}"
            scale="${0.001 * scale_factor} ${0.001 * scale_factor} ${0.001 * scale_factor}" />
          <!--box size="${body_width} ${body_width} ${body_height}"/--> <!-- [m] [m] [m] -->
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${body_width} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <!-- IMU -->
    <link name="${prefixed_imu_link}">
      <inertial>
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0"
          izz="0.00001" />
        <mass value="${0.01 * scale_factor}" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- IMU joint -->
    <joint name="imu_joint" type="revolute">
      <!--origin xyz="0 0 0" rpy="3.1416 0 0" / -->
      <parent link="${prefixed_base_link}" />
      <child link="${prefixed_imu_link}" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    
    <!-- attach multirotor_base_plugin to the base_link -->
    <gazebo>
      <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
        <robotNamespace>$(arg name)</robotNamespace>
        <linkName>${prefixed_base_link}</linkName>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Macro file for movable mass. It defines joint between mass and stick, and link which defines actual mass. Stick
  is defined in other macro file-->
  <xacro:macro name="movable_mass" params="mass_number parent tf_prefix mass dimension color x_axis y_axis z_axis orientation *origin *inertia">
    <!-- Create prefixed link name -->
    <xacro:if value="${tf_prefix != ''}">
      <xacro:property name="prefixed_movable_mass" value="${tf_prefix}/movable_mass_${mass_number}" />
      <xacro:property name="prefixed_parent" value="${tf_prefix}/${parent}" />
    </xacro:if>
    <xacro:unless value="${tf_prefix != ''}">
      <xacro:property name="prefixed_movable_mass" value="movable_mass_${mass_number}" />
      <xacro:property name="prefixed_parent" value="${parent}" />
    </xacro:unless>
    
    <joint name="stick_to_movable_mass_${mass_number}" type="prismatic">
      <xacro:insert_block name="origin"/>
      <axis xyz="${x_axis} ${y_axis} ${z_axis}"/>
      <parent link="${prefixed_parent}"/>
      <child link="${prefixed_movable_mass}"/>
      <limit lower="${-0.3 * scale_factor}" upper="${0.3 * scale_factor}" effort="10000" velocity="20"/>
      <dynamics damping="10" />  <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
    </joint>
    <link name="${prefixed_movable_mass}">
      <visual>
        <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
        <origin rpy="0 0 ${orientation}" xyz="0 0 ${-0.05 * scale_factor}"/>
        <geometry>
          <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
          <box size="${1*dimension} ${1*dimension} ${1*dimension}"/>
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 ${0*movable_mass_dimension/2}"/>
        <geometry>
          <box size="${dimension} ${dimension} ${dimension}"/>
        </geometry>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 ${0*movable_mass_dimension/2}"/>
        <mass value="${mass}"/>
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

    <gazebo reference="${prefixed_movable_mass}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- Rotor joint and link -->
  <xacro:macro name="vertical_rotor"
    params="robot_namespace suffix direction motor_constant moment_constant parent tf_prefix mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color *origin *inertia">
    
    <!-- Create prefixed link names -->
    <xacro:if value="${tf_prefix != ''}">
      <xacro:property name="prefixed_rotor" value="${tf_prefix}/rotor_${motor_number}" />
      <xacro:property name="prefixed_parent" value="${tf_prefix}/${parent}" />
    </xacro:if>
    <xacro:unless value="${tf_prefix != ''}">
      <xacro:property name="prefixed_rotor" value="rotor_${motor_number}" />
      <xacro:property name="prefixed_parent" value="${parent}" />
    </xacro:unless>
    
    <joint name="rotor_${motor_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <!-- TODO(ff): not currently set because it's not yet supported -->
      <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
      <parent link="${prefixed_parent}" />
      <child link="${prefixed_rotor}" />

    </joint>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
    <link name="${prefixed_rotor}">
      <inertial>
        <mass value="${mass_rotor}" /> <!-- [kg] -->
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <!-- <cylinder length="0.005" radius="${radius_rotor}"/> --> <!-- [m] -->
          <mesh filename="package://morus_description/meshes/propeller_${direction}.dae"
            scale="${0.0025 * scale_factor} ${0.0025 * scale_factor} ${0.0025 * scale_factor}" />
          <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder length="${0.005 * scale_factor}" radius="${radius_rotor}" /> <!-- [m] -->
        </geometry>
      </collision>
    </link>
    <gazebo>
      <plugin name="${suffix}_motor_model" filename="librotors_gazebo_motor_model.so">
        <jointName>rotor_${motor_number}_joint</jointName>
        <linkName>${prefixed_rotor}</linkName>
        <turningDirection>${direction}</turningDirection>
        <timeConstantUp>${time_constant_up}</timeConstantUp>
        <timeConstantDown>${time_constant_down}</timeConstantDown>
        <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
        <motorConstant>${motor_constant}</motorConstant>
        <momentConstant>${moment_constant}</momentConstant>
        <commandTopic>${robot_namespace}/command/motors</commandTopic>
        <motorNumber>${motor_number}</motorNumber>
        <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
        <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
        <motorVelocityTopic>${robot_namespace}/motor_vel/${motor_number}</motorVelocityTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
    <gazebo reference="${prefixed_rotor}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- We add a <transmission> block for every joint that we wish to actuate. -->
  <xacro:macro name="transmisija" params="trans_number joint_name">
    <transmission name="transmission_${trans_number}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${joint_name}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${trans_number}">
        <hardwareInterface>EffortActuatorInterface</hardwareInterface>
        <mechanicalReduction>100</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="landing_gear" params="gear_num parent tf_prefix mass dim_x dim_y dim_z *origin *inertia">
    <!-- Create prefixed link names -->
    <xacro:if value="${tf_prefix != ''}">
      <xacro:property name="prefixed_landing_gear" value="${tf_prefix}/land_gear_${gear_num}" />
      <xacro:property name="prefixed_parent" value="${tf_prefix}/${parent}" />
    </xacro:if>
    <xacro:unless value="${tf_prefix != ''}">
      <xacro:property name="prefixed_landing_gear" value="land_gear_${gear_num}" />
      <xacro:property name="prefixed_parent" value="${parent}" />
    </xacro:unless>
    
    <joint name="land_gear_${gear_num}" type="fixed">
      <xacro:insert_block name="origin"/>
      <axis xyz="0 0 1"/>
      <parent link="${prefixed_parent}"/>
      <child link="${prefixed_landing_gear}"/>
    </joint>
    <link name="${prefixed_landing_gear}">
      <!--visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.0001"/>
        </geometry>
      </visual-->
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="${dim_x} ${dim_y} ${dim_z}"/>
        </geometry>
      </collision>
      <inertial>
         <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${mass}"/>
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

  </xacro:macro>

   <!-- camera -->
  <xacro:macro name="camera_macro" params="robot_namespace scale_factor base_link_name tf_prefix">
    <!-- Create prefixed link names -->
    <xacro:if value="${tf_prefix != ''}">
      <xacro:property name="prefixed_camera_link" value="${tf_prefix}/camera_link" />
      <xacro:property name="prefixed_base_link" value="${tf_prefix}/${base_link_name}" />
    </xacro:if>
    <xacro:unless value="${tf_prefix != ''}">
      <xacro:property name="prefixed_camera_link" value="camera_link" />
      <xacro:property name="prefixed_base_link" value="${base_link_name}" />
    </xacro:unless>
    
    <!-- joint -->
    <joint name="camera_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 ${0.2 * scale_factor}" rpy="0 0 0" />
      <parent link="${prefixed_base_link}" />
      <child link="${prefixed_camera_link}" />
    </joint>

    <!-- link -->
    <link name="${prefixed_camera_link}">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${0.1 * scale_factor} ${0.1 * scale_factor} ${0.1 * scale_factor}" />
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${0.1 * scale_factor} ${0.1 * scale_factor} ${0.1 * scale_factor}" />
        </geometry>
        <material name="red" />
      </visual>

      <inertial>
        <mass value="${1e-5 * scale_factor}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="${prefixed_camera_link}">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>2</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${robot_namespace}/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${prefixed_camera_link}</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
